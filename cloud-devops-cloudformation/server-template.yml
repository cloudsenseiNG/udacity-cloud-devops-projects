AWSTemplateFormatVersion: "2010-09-09"

Description: Mayowa's WebApp LaunchTemplate

Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String
  ImageIdParameter:
    Type: String
    AllowedValues:
      - ami-0022f774911c1d690 #Amazon Linux 2 AMI (HVM) - Kernel 5.10, SSD Volume Type
      - ami-06eecef118bbf9259 #Amazon Linux 2 AMI (HVM) - Kernel 4.14, SSD Volume Type
      - ami-09d56f8956ab235b3 #Ubuntu Server 22.04 LTS (HVM), SSD Volume Type
    Description: Image ID of free-tier eligible AMIs   
            
Resources:
  #Using SSM for Remote Shell Access
  RoleForSSMAccess: 
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
  ServerInstanceProfile: 
    Type: "AWS::IAM::InstanceProfile"
    Properties: 
      Roles: 
        - !Ref RoleForSSMAccess
  LBSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our load balancer
      VpcId:
        !ImportValue
          "Fn::Sub": "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
  WebServerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our hosts and SSH from local only
      VpcId:
        !ImportValue
          "Fn::Sub": "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0
  WebAppLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      UserData:
        !Base64
          "Fn::Sub": |
              #!/bin/bash
              sudo apt-get update -y
              sudo apt-get install apache2 -y
              sudo systemctl start apache2.service
              git clone https://github.com/mayurwaB/retro-404.git
              sudo cp -f /retro-404/retro404.win30.html /var/www/html/index.html
      ImageId: !Ref ImageIdParameter
      SecurityGroups:
      - !Ref WebServerSecGroup
      InstanceType: t3.small
      IamInstanceProfile: !Ref ServerInstanceProfile
      BlockDeviceMappings:
      - DeviceName: "/dev/sdk"
        Ebs:
          VolumeSize: '10'
  WebAppGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
      - !ImportValue 
          "Fn::Sub": "${EnvironmentName}-PRIV-NETS"
      LaunchConfigurationName:
        !Ref WebAppLaunchConfig
      MinSize: '2'
      MaxSize: '5'
      TargetGroupARNs:
      - !Ref WebAppTargetGroup
  WebAppLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
      - !ImportValue 
          "Fn::Sub": "${EnvironmentName}-Pub1SUB"
      - !ImportValue 
          "Fn::Sub": "${EnvironmentName}-Pub2SUB"
      SecurityGroups:
      - !Ref LBSecGroup
  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn:
          !Ref WebAppTargetGroup
      LoadBalancerArn:
        !Ref WebAppLB
      Port: '80'
      Protocol: HTTP
  ALBListenerRule:
      Type: AWS::ElasticLoadBalancingV2::ListenerRule
      Properties:
        Actions:
        - Type: forward
          TargetGroupArn: !Ref 'WebAppTargetGroup'
        Conditions:
        - Field: path-pattern
          Values: [/]
        ListenerArn: !Ref 'Listener'
        Priority: 1
  WebAppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId: 
        !ImportValue
          "Fn::Sub": "${EnvironmentName}-VPCID"

Outputs:
  LBDNSOutput:
    Description: Load Balancer DNS Name Output
    Value: !Join ["", [ "http://", !GetAtt WebAppLB.DNSName ]]
    Export: 
      Name: !Sub ${EnvironmentName}-LBDNSName